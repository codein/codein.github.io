<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>SQL on Robin Varghese</title>
    <link>http://codein.github.io/tags/sql/</link>
    <description>Recent content in SQL on Robin Varghese</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 28 Nov 2020 14:09:10 +0000</lastBuildDate>
    
	<atom:link href="http://codein.github.io/tags/sql/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Intro to SQL with 5000 movies</title>
      <link>http://codein.github.io/blog/intro-to-sql/</link>
      <pubDate>Sat, 28 Nov 2020 14:09:10 +0000</pubDate>
      
      <guid>http://codein.github.io/blog/intro-to-sql/</guid>
      <description>Intro to SQL with 5000 movies  jupyter notebook link  This notebook is a part of a talk i have been giving to introduce people to SQL. Only pre-requisite to attend this talk is some general curiosity.
Acknowledgements This dataset was generated from The Movie Database API. This product uses the TMDb API but is not endorsed or certified by TMDb. We used the dataset published on kaggle that includes 5000 movies</description>
    </item>
    
    <item>
      <title>SQL upsert loader</title>
      <link>http://codein.github.io/blog/sql-upsert-loader/</link>
      <pubDate>Sat, 28 Nov 2020 14:09:10 +0000</pubDate>
      
      <guid>http://codein.github.io/blog/sql-upsert-loader/</guid>
      <description>Overview of SQL upsert loader   jupyter notebook link
  source code
  I hope to present a Proof Of Concept version of a multiprocessed data loader that I use extensively in my data integration pipelines.
Couple of problems that it is attempting to address are
 Ability to operate on any update flat file associated with a SQL table, with minor configuration. Ability to perform upsert operations on datasets without a primary key column.</description>
    </item>
    
  </channel>
</rss>